

================================================================
== Vivado HLS Report for 'tri_intersect'
================================================================
* Date:           Mon May 09 00:02:44 2016

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        triangle_intersect
* Solution:       tri_intersect
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |   5.00|      4.35|        0.63|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  121|  121|  122|  122|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- WORK    |   84|   84|        84|          1|          1|     2|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 84


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 121
* Pipeline: 1
  Pipeline-0: II = 1, D = 84, States = { 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	115  / (exitcond2)
	32  / (!exitcond2)
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	105  / true
105 --> 
	106  / true
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / true
109 --> 
	110  / true
110 --> 
	111  / true
111 --> 
	112  / true
112 --> 
	113  / true
113 --> 
	114  / true
114 --> 
	31  / true
115 --> 
	116  / true
116 --> 
	117  / true
117 --> 
	118  / true
118 --> 
	119  / true
119 --> 
	120  / true
120 --> 
	121  / true
121 --> 
* FSM state operations: 

 <State 1>: 0.00ns
ST_1: data_array [1/1] 0.00ns
.preheader59.preheader:0  %data_array = alloca [2 x i576], align 8

ST_1: empty [1/1] 0.00ns
.preheader59.preheader:19  %empty = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_1: ins_data_val [1/1] 0.00ns
.preheader59.preheader:20  %ins_data_val = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty, 0


 <State 2>: 0.00ns
ST_2: empty_11 [1/1] 0.00ns
.preheader59.preheader:23  %empty_11 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_2: ins_data_val1 [1/1] 0.00ns
.preheader59.preheader:24  %ins_data_val1 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_11, 0


 <State 3>: 0.00ns
ST_3: empty_12 [1/1] 0.00ns
.preheader59.preheader:26  %empty_12 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_3: ins_data_val2 [1/1] 0.00ns
.preheader59.preheader:27  %ins_data_val2 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_12, 0


 <State 4>: 0.00ns
ST_4: empty_13 [1/1] 0.00ns
.preheader59.preheader:29  %empty_13 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_4: ins_data_val3 [1/1] 0.00ns
.preheader59.preheader:30  %ins_data_val3 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_13, 0


 <State 5>: 0.00ns
ST_5: empty_14 [1/1] 0.00ns
.preheader59.preheader:32  %empty_14 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_5: ins_data_val4 [1/1] 0.00ns
.preheader59.preheader:33  %ins_data_val4 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_14, 0


 <State 6>: 0.00ns
ST_6: empty_15 [1/1] 0.00ns
.preheader59.preheader:35  %empty_15 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_6: ins_data_val5 [1/1] 0.00ns
.preheader59.preheader:36  %ins_data_val5 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_15, 0


 <State 7>: 0.00ns
ST_7: empty_16 [1/1] 0.00ns
.preheader59.preheader:38  %empty_16 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_7: ins_data_val6 [1/1] 0.00ns
.preheader59.preheader:39  %ins_data_val6 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_16, 0


 <State 8>: 0.00ns
ST_8: empty_17 [1/1] 0.00ns
.preheader59.preheader:41  %empty_17 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_8: ins_data_val7 [1/1] 0.00ns
.preheader59.preheader:42  %ins_data_val7 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_17, 0


 <State 9>: 0.00ns
ST_9: empty_18 [1/1] 0.00ns
.preheader59.preheader:44  %empty_18 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_9: ins_data_val8 [1/1] 0.00ns
.preheader59.preheader:45  %ins_data_val8 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_18, 0


 <State 10>: 0.00ns
ST_10: empty_19 [1/1] 0.00ns
.preheader59.preheader:47  %empty_19 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_10: ins_data_val9 [1/1] 0.00ns
.preheader59.preheader:48  %ins_data_val9 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_19, 0


 <State 11>: 0.00ns
ST_11: empty_20 [1/1] 0.00ns
.preheader59.preheader:50  %empty_20 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_11: ins_data_val10 [1/1] 0.00ns
.preheader59.preheader:51  %ins_data_val10 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_20, 0


 <State 12>: 0.00ns
ST_12: empty_21 [1/1] 0.00ns
.preheader59.preheader:53  %empty_21 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_12: ins_data_val11 [1/1] 0.00ns
.preheader59.preheader:54  %ins_data_val11 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_21, 0


 <State 13>: 0.00ns
ST_13: empty_22 [1/1] 0.00ns
.preheader59.preheader:56  %empty_22 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_13: ins_data_val12 [1/1] 0.00ns
.preheader59.preheader:57  %ins_data_val12 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_22, 0


 <State 14>: 0.00ns
ST_14: empty_23 [1/1] 0.00ns
.preheader59.preheader:59  %empty_23 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_14: ins_data_val13 [1/1] 0.00ns
.preheader59.preheader:60  %ins_data_val13 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_23, 0


 <State 15>: 2.71ns
ST_15: data_array_addr [1/1] 0.00ns
.preheader59.preheader:21  %data_array_addr = getelementptr [2 x i576]* %data_array, i64 0, i64 0

ST_15: ins_data_tmp_load_toint [1/1] 0.00ns
.preheader59.preheader:22  %ins_data_tmp_load_toint = bitcast float %ins_data_val to i32

ST_15: ins_data_tmp_load_1_toint [1/1] 0.00ns
.preheader59.preheader:25  %ins_data_tmp_load_1_toint = bitcast float %ins_data_val1 to i32

ST_15: ins_data_tmp_load_2_toint [1/1] 0.00ns
.preheader59.preheader:28  %ins_data_tmp_load_2_toint = bitcast float %ins_data_val2 to i32

ST_15: ins_data_tmp_load_3_toint [1/1] 0.00ns
.preheader59.preheader:31  %ins_data_tmp_load_3_toint = bitcast float %ins_data_val3 to i32

ST_15: ins_data_tmp_load_4_toint [1/1] 0.00ns
.preheader59.preheader:34  %ins_data_tmp_load_4_toint = bitcast float %ins_data_val4 to i32

ST_15: ins_data_tmp_load_5_toint [1/1] 0.00ns
.preheader59.preheader:37  %ins_data_tmp_load_5_toint = bitcast float %ins_data_val5 to i32

ST_15: ins_data_tmp_load_6_toint [1/1] 0.00ns
.preheader59.preheader:40  %ins_data_tmp_load_6_toint = bitcast float %ins_data_val6 to i32

ST_15: ins_data_tmp_load_7_toint [1/1] 0.00ns
.preheader59.preheader:43  %ins_data_tmp_load_7_toint = bitcast float %ins_data_val7 to i32

ST_15: ins_data_tmp_load_8_toint [1/1] 0.00ns
.preheader59.preheader:46  %ins_data_tmp_load_8_toint = bitcast float %ins_data_val8 to i32

ST_15: ins_data_tmp_load_9_toint [1/1] 0.00ns
.preheader59.preheader:49  %ins_data_tmp_load_9_toint = bitcast float %ins_data_val9 to i32

ST_15: ins_data_tmp_load_10_toint [1/1] 0.00ns
.preheader59.preheader:52  %ins_data_tmp_load_10_toint = bitcast float %ins_data_val10 to i32

ST_15: ins_data_tmp_load_11_toint [1/1] 0.00ns
.preheader59.preheader:55  %ins_data_tmp_load_11_toint = bitcast float %ins_data_val11 to i32

ST_15: ins_data_tmp_load_12_toint [1/1] 0.00ns
.preheader59.preheader:58  %ins_data_tmp_load_12_toint = bitcast float %ins_data_val12 to i32

ST_15: ins_data_tmp_load_13_toint [1/1] 0.00ns
.preheader59.preheader:61  %ins_data_tmp_load_13_toint = bitcast float %ins_data_val13 to i32

ST_15: empty_24 [1/1] 0.00ns
.preheader59.preheader:62  %empty_24 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_15: ins_data_val14 [1/1] 0.00ns
.preheader59.preheader:63  %ins_data_val14 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_24, 0

ST_15: ins_data_tmp_load_14_toint [1/1] 0.00ns
.preheader59.preheader:64  %ins_data_tmp_load_14_toint = bitcast float %ins_data_val14 to i32

ST_15: tmp [1/1] 0.00ns
.preheader59.preheader:65  %tmp = call i480 @_ssdm_op_BitConcatenate.i480.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32(i32 %ins_data_tmp_load_14_toint, i32 %ins_data_tmp_load_13_toint, i32 %ins_data_tmp_load_12_toint, i32 %ins_data_tmp_load_11_toint, i32 %ins_data_tmp_load_10_toint, i32 %ins_data_tmp_load_9_toint, i32 %ins_data_tmp_load_8_toint, i32 %ins_data_tmp_load_7_toint, i32 %ins_data_tmp_load_6_toint, i32 %ins_data_tmp_load_5_toint, i32 %ins_data_tmp_load_4_toint, i32 %ins_data_tmp_load_3_toint, i32 %ins_data_tmp_load_2_toint, i32 %ins_data_tmp_load_1_toint, i32 %ins_data_tmp_load_toint)

ST_15: rez_addr149150_part_set [1/1] 0.00ns
.preheader59.preheader:66  %rez_addr149150_part_set = call i576 @_ssdm_op_PartSet.i576.i576.i480.i32.i32(i576 undef, i480 %tmp, i32 0, i32 479)

ST_15: stg_171 [1/1] 2.71ns
.preheader59.preheader:67  store i576 %rez_addr149150_part_set, i576* %data_array_addr, align 8


 <State 16>: 0.00ns
ST_16: empty_25 [1/1] 0.00ns
.preheader59.preheader:68  %empty_25 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_16: ins_data_val15 [1/1] 0.00ns
.preheader59.preheader:69  %ins_data_val15 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_25, 0


 <State 17>: 0.00ns
ST_17: empty_26 [1/1] 0.00ns
.preheader59.preheader:72  %empty_26 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_17: ins_data_val16 [1/1] 0.00ns
.preheader59.preheader:73  %ins_data_val16 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_26, 0


 <State 18>: 0.00ns
ST_18: empty_27 [1/1] 0.00ns
.preheader59.preheader:75  %empty_27 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_18: ins_data_val17 [1/1] 0.00ns
.preheader59.preheader:76  %ins_data_val17 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_27, 0


 <State 19>: 0.00ns
ST_19: empty_28 [1/1] 0.00ns
.preheader59.preheader:78  %empty_28 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_19: ins_data_val18 [1/1] 0.00ns
.preheader59.preheader:79  %ins_data_val18 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_28, 0


 <State 20>: 0.00ns
ST_20: empty_29 [1/1] 0.00ns
.preheader59.preheader:81  %empty_29 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_20: ins_data_val19 [1/1] 0.00ns
.preheader59.preheader:82  %ins_data_val19 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_29, 0


 <State 21>: 0.00ns
ST_21: empty_30 [1/1] 0.00ns
.preheader59.preheader:84  %empty_30 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_21: ins_data_val20 [1/1] 0.00ns
.preheader59.preheader:85  %ins_data_val20 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_30, 0


 <State 22>: 0.00ns
ST_22: empty_31 [1/1] 0.00ns
.preheader59.preheader:87  %empty_31 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_22: ins_data_val21 [1/1] 0.00ns
.preheader59.preheader:88  %ins_data_val21 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_31, 0


 <State 23>: 0.00ns
ST_23: empty_32 [1/1] 0.00ns
.preheader59.preheader:90  %empty_32 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_23: ins_data_val22 [1/1] 0.00ns
.preheader59.preheader:91  %ins_data_val22 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_32, 0


 <State 24>: 0.00ns
ST_24: empty_33 [1/1] 0.00ns
.preheader59.preheader:93  %empty_33 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_24: ins_data_val23 [1/1] 0.00ns
.preheader59.preheader:94  %ins_data_val23 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_33, 0


 <State 25>: 0.00ns
ST_25: empty_34 [1/1] 0.00ns
.preheader59.preheader:96  %empty_34 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_25: ins_data_val24 [1/1] 0.00ns
.preheader59.preheader:97  %ins_data_val24 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_34, 0


 <State 26>: 0.00ns
ST_26: empty_35 [1/1] 0.00ns
.preheader59.preheader:99  %empty_35 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_26: ins_data_val25 [1/1] 0.00ns
.preheader59.preheader:100  %ins_data_val25 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_35, 0


 <State 27>: 0.00ns
ST_27: empty_36 [1/1] 0.00ns
.preheader59.preheader:102  %empty_36 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_27: ins_data_val26 [1/1] 0.00ns
.preheader59.preheader:103  %ins_data_val26 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_36, 0


 <State 28>: 0.00ns
ST_28: empty_37 [1/1] 0.00ns
.preheader59.preheader:105  %empty_37 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_28: ins_data_val27 [1/1] 0.00ns
.preheader59.preheader:106  %ins_data_val27 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_37, 0


 <State 29>: 0.00ns
ST_29: empty_38 [1/1] 0.00ns
.preheader59.preheader:108  %empty_38 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_29: ins_data_val28 [1/1] 0.00ns
.preheader59.preheader:109  %ins_data_val28 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_38, 0


 <State 30>: 2.71ns
ST_30: stg_200 [1/1] 0.00ns
.preheader59.preheader:1  call void (...)* @_ssdm_op_SpecBitsMap(float* %ins_data), !map !7

ST_30: stg_201 [1/1] 0.00ns
.preheader59.preheader:2  call void (...)* @_ssdm_op_SpecBitsMap(i4* %ins_keep_V), !map !13

ST_30: stg_202 [1/1] 0.00ns
.preheader59.preheader:3  call void (...)* @_ssdm_op_SpecBitsMap(i4* %ins_strb_V), !map !17

ST_30: stg_203 [1/1] 0.00ns
.preheader59.preheader:4  call void (...)* @_ssdm_op_SpecBitsMap(i1* %ins_user_V), !map !21

ST_30: stg_204 [1/1] 0.00ns
.preheader59.preheader:5  call void (...)* @_ssdm_op_SpecBitsMap(i1* %ins_last_V), !map !25

ST_30: stg_205 [1/1] 0.00ns
.preheader59.preheader:6  call void (...)* @_ssdm_op_SpecBitsMap(i1* %ins_id_V), !map !29

ST_30: stg_206 [1/1] 0.00ns
.preheader59.preheader:7  call void (...)* @_ssdm_op_SpecBitsMap(i1* %ins_dest_V), !map !33

ST_30: stg_207 [1/1] 0.00ns
.preheader59.preheader:8  call void (...)* @_ssdm_op_SpecBitsMap(float* %outs_data), !map !37

ST_30: stg_208 [1/1] 0.00ns
.preheader59.preheader:9  call void (...)* @_ssdm_op_SpecBitsMap(i4* %outs_keep_V), !map !43

ST_30: stg_209 [1/1] 0.00ns
.preheader59.preheader:10  call void (...)* @_ssdm_op_SpecBitsMap(i4* %outs_strb_V), !map !47

ST_30: stg_210 [1/1] 0.00ns
.preheader59.preheader:11  call void (...)* @_ssdm_op_SpecBitsMap(i1* %outs_user_V), !map !51

ST_30: stg_211 [1/1] 0.00ns
.preheader59.preheader:12  call void (...)* @_ssdm_op_SpecBitsMap(i1* %outs_last_V), !map !55

ST_30: stg_212 [1/1] 0.00ns
.preheader59.preheader:13  call void (...)* @_ssdm_op_SpecBitsMap(i1* %outs_id_V), !map !59

ST_30: stg_213 [1/1] 0.00ns
.preheader59.preheader:14  call void (...)* @_ssdm_op_SpecBitsMap(i1* %outs_dest_V), !map !63

ST_30: stg_214 [1/1] 0.00ns
.preheader59.preheader:15  call void (...)* @_ssdm_op_SpecTopModule([14 x i8]* @str) nounwind

ST_30: stg_215 [1/1] 0.00ns
.preheader59.preheader:16  call void (...)* @_ssdm_op_SpecInterface(float* %outs_data, i4* %outs_keep_V, i4* %outs_strb_V, i1* %outs_user_V, i1* %outs_last_V, i1* %outs_id_V, i1* %outs_dest_V, [5 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_30: stg_216 [1/1] 0.00ns
.preheader59.preheader:17  call void (...)* @_ssdm_op_SpecInterface(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V, [5 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_30: stg_217 [1/1] 0.00ns
.preheader59.preheader:18  call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_30: data_array_addr_1 [1/1] 0.00ns
.preheader59.preheader:70  %data_array_addr_1 = getelementptr [2 x i576]* %data_array, i64 0, i64 1

ST_30: ins_data_tmp_load_15_toint [1/1] 0.00ns
.preheader59.preheader:71  %ins_data_tmp_load_15_toint = bitcast float %ins_data_val15 to i32

ST_30: ins_data_tmp_load_16_toint [1/1] 0.00ns
.preheader59.preheader:74  %ins_data_tmp_load_16_toint = bitcast float %ins_data_val16 to i32

ST_30: ins_data_tmp_load_17_toint [1/1] 0.00ns
.preheader59.preheader:77  %ins_data_tmp_load_17_toint = bitcast float %ins_data_val17 to i32

ST_30: ins_data_tmp_load_18_toint [1/1] 0.00ns
.preheader59.preheader:80  %ins_data_tmp_load_18_toint = bitcast float %ins_data_val18 to i32

ST_30: ins_data_tmp_load_19_toint [1/1] 0.00ns
.preheader59.preheader:83  %ins_data_tmp_load_19_toint = bitcast float %ins_data_val19 to i32

ST_30: ins_data_tmp_load_20_toint [1/1] 0.00ns
.preheader59.preheader:86  %ins_data_tmp_load_20_toint = bitcast float %ins_data_val20 to i32

ST_30: ins_data_tmp_load_21_toint [1/1] 0.00ns
.preheader59.preheader:89  %ins_data_tmp_load_21_toint = bitcast float %ins_data_val21 to i32

ST_30: ins_data_tmp_load_22_toint [1/1] 0.00ns
.preheader59.preheader:92  %ins_data_tmp_load_22_toint = bitcast float %ins_data_val22 to i32

ST_30: ins_data_tmp_load_23_toint [1/1] 0.00ns
.preheader59.preheader:95  %ins_data_tmp_load_23_toint = bitcast float %ins_data_val23 to i32

ST_30: ins_data_tmp_load_24_toint [1/1] 0.00ns
.preheader59.preheader:98  %ins_data_tmp_load_24_toint = bitcast float %ins_data_val24 to i32

ST_30: ins_data_tmp_load_25_toint [1/1] 0.00ns
.preheader59.preheader:101  %ins_data_tmp_load_25_toint = bitcast float %ins_data_val25 to i32

ST_30: ins_data_tmp_load_26_toint [1/1] 0.00ns
.preheader59.preheader:104  %ins_data_tmp_load_26_toint = bitcast float %ins_data_val26 to i32

ST_30: ins_data_tmp_load_27_toint [1/1] 0.00ns
.preheader59.preheader:107  %ins_data_tmp_load_27_toint = bitcast float %ins_data_val27 to i32

ST_30: ins_data_tmp_load_28_toint [1/1] 0.00ns
.preheader59.preheader:110  %ins_data_tmp_load_28_toint = bitcast float %ins_data_val28 to i32

ST_30: empty_39 [1/1] 0.00ns
.preheader59.preheader:111  %empty_39 = call { float, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %ins_data, i4* %ins_keep_V, i4* %ins_strb_V, i1* %ins_user_V, i1* %ins_last_V, i1* %ins_id_V, i1* %ins_dest_V)

ST_30: ins_data_val29 [1/1] 0.00ns
.preheader59.preheader:112  %ins_data_val29 = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_39, 0

ST_30: ins_keep_V_val [1/1] 0.00ns
.preheader59.preheader:113  %ins_keep_V_val = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_39, 1

ST_30: ins_strb_V_val [1/1] 0.00ns
.preheader59.preheader:114  %ins_strb_V_val = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_39, 2

ST_30: ins_user_V_val [1/1] 0.00ns
.preheader59.preheader:115  %ins_user_V_val = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_39, 3

ST_30: ins_last_V_val [1/1] 0.00ns
.preheader59.preheader:116  %ins_last_V_val = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_39, 4

ST_30: ins_id_V_val [1/1] 0.00ns
.preheader59.preheader:117  %ins_id_V_val = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_39, 5

ST_30: ins_dest_V_val [1/1] 0.00ns
.preheader59.preheader:118  %ins_dest_V_val = extractvalue { float, i4, i4, i1, i1, i1, i1 } %empty_39, 6

ST_30: ins_data_tmp_load_29_toint [1/1] 0.00ns
.preheader59.preheader:119  %ins_data_tmp_load_29_toint = bitcast float %ins_data_val29 to i32

ST_30: tmp_1 [1/1] 0.00ns
.preheader59.preheader:120  %tmp_1 = call i480 @_ssdm_op_BitConcatenate.i480.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32(i32 %ins_data_tmp_load_29_toint, i32 %ins_data_tmp_load_28_toint, i32 %ins_data_tmp_load_27_toint, i32 %ins_data_tmp_load_26_toint, i32 %ins_data_tmp_load_25_toint, i32 %ins_data_tmp_load_24_toint, i32 %ins_data_tmp_load_23_toint, i32 %ins_data_tmp_load_22_toint, i32 %ins_data_tmp_load_21_toint, i32 %ins_data_tmp_load_20_toint, i32 %ins_data_tmp_load_19_toint, i32 %ins_data_tmp_load_18_toint, i32 %ins_data_tmp_load_17_toint, i32 %ins_data_tmp_load_16_toint, i32 %ins_data_tmp_load_15_toint)

ST_30: rez_addr_1146147_part_set [1/1] 0.00ns
.preheader59.preheader:121  %rez_addr_1146147_part_set = call i576 @_ssdm_op_PartSet.i576.i576.i480.i32.i32(i576 undef, i480 %tmp_1, i32 0, i32 479)

ST_30: stg_244 [1/1] 2.71ns
.preheader59.preheader:122  store i576 %rez_addr_1146147_part_set, i576* %data_array_addr_1, align 8

ST_30: stg_245 [1/1] 1.57ns
.preheader59.preheader:123  br label %.preheader59


 <State 31>: 2.73ns
ST_31: i1 [1/1] 0.00ns
.preheader59:0  %i1 = phi i2 [ %i, %0 ], [ 0, %.preheader59.preheader ]

ST_31: exitcond2 [1/1] 1.36ns
.preheader59:1  %exitcond2 = icmp eq i2 %i1, -2

ST_31: i [1/1] 0.80ns
.preheader59:2  %i = add i2 %i1, 1

ST_31: stg_249 [1/1] 0.00ns
.preheader59:3  br i1 %exitcond2, label %.preheader.preheader, label %0

ST_31: tmp_s [1/1] 0.00ns
:4  %tmp_s = zext i2 %i1 to i64

ST_31: data_array_addr_2 [1/1] 0.00ns
:5  %data_array_addr_2 = getelementptr [2 x i576]* %data_array, i64 0, i64 %tmp_s

ST_31: data_array_load_2 [2/2] 2.71ns
:6  %data_array_load_2 = load i576* %data_array_addr_2, align 8


 <State 32>: 2.71ns
ST_32: data_array_load_2 [1/2] 2.71ns
:6  %data_array_load_2 = load i576* %data_array_addr_2, align 8

ST_32: tmp_3 [1/1] 0.00ns
:7  %tmp_3 = trunc i576 %data_array_load_2 to i32

ST_32: v0y_assign_new [1/1] 0.00ns
:9  %v0y_assign_new = call i32 @_ssdm_op_PartSelect.i32.i576.i32.i32(i576 %data_array_load_2, i32 32, i32 63)

ST_32: v0z_assign_new [1/1] 0.00ns
:11  %v0z_assign_new = call i32 @_ssdm_op_PartSelect.i32.i576.i32.i32(i576 %data_array_load_2, i32 64, i32 95)

ST_32: v1x_assign_new [1/1] 0.00ns
:13  %v1x_assign_new = call i32 @_ssdm_op_PartSelect.i32.i576.i32.i32(i576 %data_array_load_2, i32 96, i32 127)

ST_32: v1y_assign_new [1/1] 0.00ns
:15  %v1y_assign_new = call i32 @_ssdm_op_PartSelect.i32.i576.i32.i32(i576 %data_array_load_2, i32 128, i32 159)

ST_32: v1z_assign_new [1/1] 0.00ns
:17  %v1z_assign_new = call i32 @_ssdm_op_PartSelect.i32.i576.i32.i32(i576 %data_array_load_2, i32 160, i32 191)

ST_32: v2x_assign_new [1/1] 0.00ns
:19  %v2x_assign_new = call i32 @_ssdm_op_PartSelect.i32.i576.i32.i32(i576 %data_array_load_2, i32 192, i32 223)

ST_32: v2y_assign_new [1/1] 0.00ns
:21  %v2y_assign_new = call i32 @_ssdm_op_PartSelect.i32.i576.i32.i32(i576 %data_array_load_2, i32 224, i32 255)

ST_32: v2z_assign_new [1/1] 0.00ns
:23  %v2z_assign_new = call i32 @_ssdm_op_PartSelect.i32.i576.i32.i32(i576 %data_array_load_2, i32 256, i32 287)

ST_32: rdx_assign_new [1/1] 0.00ns
:25  %rdx_assign_new = call i32 @_ssdm_op_PartSelect.i32.i576.i32.i32(i576 %data_array_load_2, i32 288, i32 319)

ST_32: rdy_assign_new [1/1] 0.00ns
:27  %rdy_assign_new = call i32 @_ssdm_op_PartSelect.i32.i576.i32.i32(i576 %data_array_load_2, i32 320, i32 351)

ST_32: rdz_assign_new [1/1] 0.00ns
:29  %rdz_assign_new = call i32 @_ssdm_op_PartSelect.i32.i576.i32.i32(i576 %data_array_load_2, i32 352, i32 383)

ST_32: rex_assign_new [1/1] 0.00ns
:31  %rex_assign_new = call i32 @_ssdm_op_PartSelect.i32.i576.i32.i32(i576 %data_array_load_2, i32 384, i32 415)

ST_32: rey_assign_new [1/1] 0.00ns
:33  %rey_assign_new = call i32 @_ssdm_op_PartSelect.i32.i576.i32.i32(i576 %data_array_load_2, i32 416, i32 447)

ST_32: rez_assign_new [1/1] 0.00ns
:35  %rez_assign_new = call i32 @_ssdm_op_PartSelect.i32.i576.i32.i32(i576 %data_array_load_2, i32 448, i32 479)


 <State 33>: 4.35ns
ST_33: v0x_assign4 [1/1] 0.00ns
:8  %v0x_assign4 = bitcast i32 %tmp_3 to float

ST_33: v0y_assign [1/1] 0.00ns
:10  %v0y_assign = bitcast i32 %v0y_assign_new to float

ST_33: v0z_assign [1/1] 0.00ns
:12  %v0z_assign = bitcast i32 %v0z_assign_new to float

ST_33: v1x_assign [1/1] 0.00ns
:14  %v1x_assign = bitcast i32 %v1x_assign_new to float

ST_33: v1y_assign [1/1] 0.00ns
:16  %v1y_assign = bitcast i32 %v1y_assign_new to float

ST_33: v1z_assign [1/1] 0.00ns
:18  %v1z_assign = bitcast i32 %v1z_assign_new to float

ST_33: v2x_assign [1/1] 0.00ns
:20  %v2x_assign = bitcast i32 %v2x_assign_new to float

ST_33: v2y_assign [1/1] 0.00ns
:22  %v2y_assign = bitcast i32 %v2y_assign_new to float

ST_33: v2z_assign [1/1] 0.00ns
:24  %v2z_assign = bitcast i32 %v2z_assign_new to float

ST_33: rex_assign [1/1] 0.00ns
:32  %rex_assign = bitcast i32 %rex_assign_new to float

ST_33: rey_assign [1/1] 0.00ns
:34  %rey_assign = bitcast i32 %rey_assign_new to float

ST_33: rez_assign [1/1] 0.00ns
:36  %rez_assign = bitcast i32 %rez_assign_new to float

ST_33: a [9/9] 4.35ns
:37  %a = fsub float %v0x_assign4, %v1x_assign

ST_33: b [9/9] 4.35ns
:38  %b = fsub float %v0y_assign, %v1y_assign

ST_33: c [9/9] 4.35ns
:39  %c = fsub float %v0z_assign, %v1z_assign

ST_33: d [9/9] 4.35ns
:40  %d = fsub float %v0x_assign4, %v2x_assign

ST_33: e [9/9] 4.35ns
:41  %e = fsub float %v0y_assign, %v2y_assign

ST_33: f [9/9] 4.35ns
:42  %f = fsub float %v0z_assign, %v2z_assign

ST_33: j [9/9] 4.35ns
:43  %j = fsub float %v0x_assign4, %rex_assign

ST_33: k [9/9] 4.35ns
:44  %k = fsub float %v0y_assign, %rey_assign

ST_33: l [9/9] 4.35ns
:45  %l = fsub float %v0z_assign, %rez_assign


 <State 34>: 4.35ns
ST_34: a [8/9] 4.35ns
:37  %a = fsub float %v0x_assign4, %v1x_assign

ST_34: b [8/9] 4.35ns
:38  %b = fsub float %v0y_assign, %v1y_assign

ST_34: c [8/9] 4.35ns
:39  %c = fsub float %v0z_assign, %v1z_assign

ST_34: d [8/9] 4.35ns
:40  %d = fsub float %v0x_assign4, %v2x_assign

ST_34: e [8/9] 4.35ns
:41  %e = fsub float %v0y_assign, %v2y_assign

ST_34: f [8/9] 4.35ns
:42  %f = fsub float %v0z_assign, %v2z_assign

ST_34: j [8/9] 4.35ns
:43  %j = fsub float %v0x_assign4, %rex_assign

ST_34: k [8/9] 4.35ns
:44  %k = fsub float %v0y_assign, %rey_assign

ST_34: l [8/9] 4.35ns
:45  %l = fsub float %v0z_assign, %rez_assign


 <State 35>: 4.35ns
ST_35: a [7/9] 4.35ns
:37  %a = fsub float %v0x_assign4, %v1x_assign

ST_35: b [7/9] 4.35ns
:38  %b = fsub float %v0y_assign, %v1y_assign

ST_35: c [7/9] 4.35ns
:39  %c = fsub float %v0z_assign, %v1z_assign

ST_35: d [7/9] 4.35ns
:40  %d = fsub float %v0x_assign4, %v2x_assign

ST_35: e [7/9] 4.35ns
:41  %e = fsub float %v0y_assign, %v2y_assign

ST_35: f [7/9] 4.35ns
:42  %f = fsub float %v0z_assign, %v2z_assign

ST_35: j [7/9] 4.35ns
:43  %j = fsub float %v0x_assign4, %rex_assign

ST_35: k [7/9] 4.35ns
:44  %k = fsub float %v0y_assign, %rey_assign

ST_35: l [7/9] 4.35ns
:45  %l = fsub float %v0z_assign, %rez_assign


 <State 36>: 4.35ns
ST_36: a [6/9] 4.35ns
:37  %a = fsub float %v0x_assign4, %v1x_assign

ST_36: b [6/9] 4.35ns
:38  %b = fsub float %v0y_assign, %v1y_assign

ST_36: c [6/9] 4.35ns
:39  %c = fsub float %v0z_assign, %v1z_assign

ST_36: d [6/9] 4.35ns
:40  %d = fsub float %v0x_assign4, %v2x_assign

ST_36: e [6/9] 4.35ns
:41  %e = fsub float %v0y_assign, %v2y_assign

ST_36: f [6/9] 4.35ns
:42  %f = fsub float %v0z_assign, %v2z_assign

ST_36: j [6/9] 4.35ns
:43  %j = fsub float %v0x_assign4, %rex_assign

ST_36: k [6/9] 4.35ns
:44  %k = fsub float %v0y_assign, %rey_assign

ST_36: l [6/9] 4.35ns
:45  %l = fsub float %v0z_assign, %rez_assign


 <State 37>: 4.35ns
ST_37: a [5/9] 4.35ns
:37  %a = fsub float %v0x_assign4, %v1x_assign

ST_37: b [5/9] 4.35ns
:38  %b = fsub float %v0y_assign, %v1y_assign

ST_37: c [5/9] 4.35ns
:39  %c = fsub float %v0z_assign, %v1z_assign

ST_37: d [5/9] 4.35ns
:40  %d = fsub float %v0x_assign4, %v2x_assign

ST_37: e [5/9] 4.35ns
:41  %e = fsub float %v0y_assign, %v2y_assign

ST_37: f [5/9] 4.35ns
:42  %f = fsub float %v0z_assign, %v2z_assign

ST_37: j [5/9] 4.35ns
:43  %j = fsub float %v0x_assign4, %rex_assign

ST_37: k [5/9] 4.35ns
:44  %k = fsub float %v0y_assign, %rey_assign

ST_37: l [5/9] 4.35ns
:45  %l = fsub float %v0z_assign, %rez_assign


 <State 38>: 4.35ns
ST_38: a [4/9] 4.35ns
:37  %a = fsub float %v0x_assign4, %v1x_assign

ST_38: b [4/9] 4.35ns
:38  %b = fsub float %v0y_assign, %v1y_assign

ST_38: c [4/9] 4.35ns
:39  %c = fsub float %v0z_assign, %v1z_assign

ST_38: d [4/9] 4.35ns
:40  %d = fsub float %v0x_assign4, %v2x_assign

ST_38: e [4/9] 4.35ns
:41  %e = fsub float %v0y_assign, %v2y_assign

ST_38: f [4/9] 4.35ns
:42  %f = fsub float %v0z_assign, %v2z_assign

ST_38: j [4/9] 4.35ns
:43  %j = fsub float %v0x_assign4, %rex_assign

ST_38: k [4/9] 4.35ns
:44  %k = fsub float %v0y_assign, %rey_assign

ST_38: l [4/9] 4.35ns
:45  %l = fsub float %v0z_assign, %rez_assign


 <State 39>: 4.35ns
ST_39: a [3/9] 4.35ns
:37  %a = fsub float %v0x_assign4, %v1x_assign

ST_39: b [3/9] 4.35ns
:38  %b = fsub float %v0y_assign, %v1y_assign

ST_39: c [3/9] 4.35ns
:39  %c = fsub float %v0z_assign, %v1z_assign

ST_39: d [3/9] 4.35ns
:40  %d = fsub float %v0x_assign4, %v2x_assign

ST_39: e [3/9] 4.35ns
:41  %e = fsub float %v0y_assign, %v2y_assign

ST_39: f [3/9] 4.35ns
:42  %f = fsub float %v0z_assign, %v2z_assign

ST_39: j [3/9] 4.35ns
:43  %j = fsub float %v0x_assign4, %rex_assign

ST_39: k [3/9] 4.35ns
:44  %k = fsub float %v0y_assign, %rey_assign

ST_39: l [3/9] 4.35ns
:45  %l = fsub float %v0z_assign, %rez_assign


 <State 40>: 4.35ns
ST_40: a [2/9] 4.35ns
:37  %a = fsub float %v0x_assign4, %v1x_assign

ST_40: b [2/9] 4.35ns
:38  %b = fsub float %v0y_assign, %v1y_assign

ST_40: c [2/9] 4.35ns
:39  %c = fsub float %v0z_assign, %v1z_assign

ST_40: d [2/9] 4.35ns
:40  %d = fsub float %v0x_assign4, %v2x_assign

ST_40: e [2/9] 4.35ns
:41  %e = fsub float %v0y_assign, %v2y_assign

ST_40: f [2/9] 4.35ns
:42  %f = fsub float %v0z_assign, %v2z_assign

ST_40: j [2/9] 4.35ns
:43  %j = fsub float %v0x_assign4, %rex_assign

ST_40: k [2/9] 4.35ns
:44  %k = fsub float %v0y_assign, %rey_assign

ST_40: l [2/9] 4.35ns
:45  %l = fsub float %v0z_assign, %rez_assign


 <State 41>: 4.35ns
ST_41: a [1/9] 4.35ns
:37  %a = fsub float %v0x_assign4, %v1x_assign

ST_41: b [1/9] 4.35ns
:38  %b = fsub float %v0y_assign, %v1y_assign

ST_41: c [1/9] 4.35ns
:39  %c = fsub float %v0z_assign, %v1z_assign

ST_41: d [1/9] 4.35ns
:40  %d = fsub float %v0x_assign4, %v2x_assign

ST_41: e [1/9] 4.35ns
:41  %e = fsub float %v0y_assign, %v2y_assign

ST_41: f [1/9] 4.35ns
:42  %f = fsub float %v0z_assign, %v2z_assign

ST_41: j [1/9] 4.35ns
:43  %j = fsub float %v0x_assign4, %rex_assign

ST_41: k [1/9] 4.35ns
:44  %k = fsub float %v0y_assign, %rey_assign

ST_41: l [1/9] 4.35ns
:45  %l = fsub float %v0z_assign, %rez_assign


 <State 42>: 4.35ns
ST_42: g [1/1] 0.00ns
:26  %g = bitcast i32 %rdx_assign_new to float

ST_42: h [1/1] 0.00ns
:28  %h = bitcast i32 %rdy_assign_new to float

ST_42: i_1 [1/1] 0.00ns
:30  %i_1 = bitcast i32 %rdz_assign_new to float

ST_42: tmp_i [5/5] 4.35ns
:46  %tmp_i = fmul float %e, %i_1

ST_42: tmp_i_41 [5/5] 4.35ns
:47  %tmp_i_41 = fmul float %f, %h

ST_42: tmp_3_i [5/5] 4.35ns
:50  %tmp_3_i = fmul float %f, %g

ST_42: tmp_4_i [5/5] 4.35ns
:51  %tmp_4_i = fmul float %d, %i_1

ST_42: tmp_12_i [5/5] 4.35ns
:61  %tmp_12_i = fmul float %a, %k

ST_42: tmp_13_i [5/5] 4.35ns
:62  %tmp_13_i = fmul float %j, %b

ST_42: tmp_16_i [5/5] 4.35ns
:65  %tmp_16_i = fmul float %j, %c

ST_42: tmp_17_i [5/5] 4.35ns
:66  %tmp_17_i = fmul float %a, %l


 <State 43>: 4.35ns
ST_43: tmp_i [4/5] 4.35ns
:46  %tmp_i = fmul float %e, %i_1

ST_43: tmp_i_41 [4/5] 4.35ns
:47  %tmp_i_41 = fmul float %f, %h

ST_43: tmp_3_i [4/5] 4.35ns
:50  %tmp_3_i = fmul float %f, %g

ST_43: tmp_4_i [4/5] 4.35ns
:51  %tmp_4_i = fmul float %d, %i_1

ST_43: tmp_12_i [4/5] 4.35ns
:61  %tmp_12_i = fmul float %a, %k

ST_43: tmp_13_i [4/5] 4.35ns
:62  %tmp_13_i = fmul float %j, %b

ST_43: tmp_16_i [4/5] 4.35ns
:65  %tmp_16_i = fmul float %j, %c

ST_43: tmp_17_i [4/5] 4.35ns
:66  %tmp_17_i = fmul float %a, %l


 <State 44>: 4.35ns
ST_44: tmp_i [3/5] 4.35ns
:46  %tmp_i = fmul float %e, %i_1

ST_44: tmp_i_41 [3/5] 4.35ns
:47  %tmp_i_41 = fmul float %f, %h

ST_44: tmp_3_i [3/5] 4.35ns
:50  %tmp_3_i = fmul float %f, %g

ST_44: tmp_4_i [3/5] 4.35ns
:51  %tmp_4_i = fmul float %d, %i_1

ST_44: tmp_12_i [3/5] 4.35ns
:61  %tmp_12_i = fmul float %a, %k

ST_44: tmp_13_i [3/5] 4.35ns
:62  %tmp_13_i = fmul float %j, %b

ST_44: tmp_16_i [3/5] 4.35ns
:65  %tmp_16_i = fmul float %j, %c

ST_44: tmp_17_i [3/5] 4.35ns
:66  %tmp_17_i = fmul float %a, %l


 <State 45>: 4.35ns
ST_45: tmp_i [2/5] 4.35ns
:46  %tmp_i = fmul float %e, %i_1

ST_45: tmp_i_41 [2/5] 4.35ns
:47  %tmp_i_41 = fmul float %f, %h

ST_45: tmp_3_i [2/5] 4.35ns
:50  %tmp_3_i = fmul float %f, %g

ST_45: tmp_4_i [2/5] 4.35ns
:51  %tmp_4_i = fmul float %d, %i_1

ST_45: tmp_12_i [2/5] 4.35ns
:61  %tmp_12_i = fmul float %a, %k

ST_45: tmp_13_i [2/5] 4.35ns
:62  %tmp_13_i = fmul float %j, %b

ST_45: tmp_16_i [2/5] 4.35ns
:65  %tmp_16_i = fmul float %j, %c

ST_45: tmp_17_i [2/5] 4.35ns
:66  %tmp_17_i = fmul float %a, %l


 <State 46>: 4.35ns
ST_46: tmp_i [1/5] 4.35ns
:46  %tmp_i = fmul float %e, %i_1

ST_46: tmp_i_41 [1/5] 4.35ns
:47  %tmp_i_41 = fmul float %f, %h

ST_46: tmp_3_i [1/5] 4.35ns
:50  %tmp_3_i = fmul float %f, %g

ST_46: tmp_4_i [1/5] 4.35ns
:51  %tmp_4_i = fmul float %d, %i_1

ST_46: tmp_12_i [1/5] 4.35ns
:61  %tmp_12_i = fmul float %a, %k

ST_46: tmp_13_i [1/5] 4.35ns
:62  %tmp_13_i = fmul float %j, %b

ST_46: tmp_16_i [1/5] 4.35ns
:65  %tmp_16_i = fmul float %j, %c

ST_46: tmp_17_i [1/5] 4.35ns
:66  %tmp_17_i = fmul float %a, %l


 <State 47>: 4.35ns
ST_47: tmp_1_i [9/9] 4.35ns
:48  %tmp_1_i = fsub float %tmp_i, %tmp_i_41

ST_47: tmp_5_i [9/9] 4.35ns
:52  %tmp_5_i = fsub float %tmp_3_i, %tmp_4_i

ST_47: tmp_14_i [9/9] 4.35ns
:63  %tmp_14_i = fsub float %tmp_12_i, %tmp_13_i

ST_47: tmp_18_i [9/9] 4.35ns
:67  %tmp_18_i = fsub float %tmp_16_i, %tmp_17_i


 <State 48>: 4.35ns
ST_48: tmp_1_i [8/9] 4.35ns
:48  %tmp_1_i = fsub float %tmp_i, %tmp_i_41

ST_48: tmp_5_i [8/9] 4.35ns
:52  %tmp_5_i = fsub float %tmp_3_i, %tmp_4_i

ST_48: tmp_14_i [8/9] 4.35ns
:63  %tmp_14_i = fsub float %tmp_12_i, %tmp_13_i

ST_48: tmp_18_i [8/9] 4.35ns
:67  %tmp_18_i = fsub float %tmp_16_i, %tmp_17_i


 <State 49>: 4.35ns
ST_49: tmp_1_i [7/9] 4.35ns
:48  %tmp_1_i = fsub float %tmp_i, %tmp_i_41

ST_49: tmp_5_i [7/9] 4.35ns
:52  %tmp_5_i = fsub float %tmp_3_i, %tmp_4_i

ST_49: tmp_14_i [7/9] 4.35ns
:63  %tmp_14_i = fsub float %tmp_12_i, %tmp_13_i

ST_49: tmp_18_i [7/9] 4.35ns
:67  %tmp_18_i = fsub float %tmp_16_i, %tmp_17_i


 <State 50>: 4.35ns
ST_50: tmp_1_i [6/9] 4.35ns
:48  %tmp_1_i = fsub float %tmp_i, %tmp_i_41

ST_50: tmp_5_i [6/9] 4.35ns
:52  %tmp_5_i = fsub float %tmp_3_i, %tmp_4_i

ST_50: tmp_14_i [6/9] 4.35ns
:63  %tmp_14_i = fsub float %tmp_12_i, %tmp_13_i

ST_50: tmp_18_i [6/9] 4.35ns
:67  %tmp_18_i = fsub float %tmp_16_i, %tmp_17_i


 <State 51>: 4.35ns
ST_51: tmp_1_i [5/9] 4.35ns
:48  %tmp_1_i = fsub float %tmp_i, %tmp_i_41

ST_51: tmp_5_i [5/9] 4.35ns
:52  %tmp_5_i = fsub float %tmp_3_i, %tmp_4_i

ST_51: tmp_8_i [5/5] 4.35ns
:55  %tmp_8_i = fmul float %d, %h

ST_51: tmp_9_i [5/5] 4.35ns
:56  %tmp_9_i = fmul float %e, %g

ST_51: tmp_14_i [5/9] 4.35ns
:63  %tmp_14_i = fsub float %tmp_12_i, %tmp_13_i

ST_51: tmp_18_i [5/9] 4.35ns
:67  %tmp_18_i = fsub float %tmp_16_i, %tmp_17_i

ST_51: tmp_21_i [5/5] 4.35ns
:70  %tmp_21_i = fmul float %b, %l

ST_51: tmp_22_i [5/5] 4.35ns
:71  %tmp_22_i = fmul float %k, %c


 <State 52>: 4.35ns
ST_52: tmp_1_i [4/9] 4.35ns
:48  %tmp_1_i = fsub float %tmp_i, %tmp_i_41

ST_52: tmp_5_i [4/9] 4.35ns
:52  %tmp_5_i = fsub float %tmp_3_i, %tmp_4_i

ST_52: tmp_8_i [4/5] 4.35ns
:55  %tmp_8_i = fmul float %d, %h

ST_52: tmp_9_i [4/5] 4.35ns
:56  %tmp_9_i = fmul float %e, %g

ST_52: tmp_14_i [4/9] 4.35ns
:63  %tmp_14_i = fsub float %tmp_12_i, %tmp_13_i

ST_52: tmp_18_i [4/9] 4.35ns
:67  %tmp_18_i = fsub float %tmp_16_i, %tmp_17_i

ST_52: tmp_21_i [4/5] 4.35ns
:70  %tmp_21_i = fmul float %b, %l

ST_52: tmp_22_i [4/5] 4.35ns
:71  %tmp_22_i = fmul float %k, %c


 <State 53>: 4.35ns
ST_53: tmp_1_i [3/9] 4.35ns
:48  %tmp_1_i = fsub float %tmp_i, %tmp_i_41

ST_53: tmp_5_i [3/9] 4.35ns
:52  %tmp_5_i = fsub float %tmp_3_i, %tmp_4_i

ST_53: tmp_8_i [3/5] 4.35ns
:55  %tmp_8_i = fmul float %d, %h

ST_53: tmp_9_i [3/5] 4.35ns
:56  %tmp_9_i = fmul float %e, %g

ST_53: tmp_14_i [3/9] 4.35ns
:63  %tmp_14_i = fsub float %tmp_12_i, %tmp_13_i

ST_53: tmp_18_i [3/9] 4.35ns
:67  %tmp_18_i = fsub float %tmp_16_i, %tmp_17_i

ST_53: tmp_21_i [3/5] 4.35ns
:70  %tmp_21_i = fmul float %b, %l

ST_53: tmp_22_i [3/5] 4.35ns
:71  %tmp_22_i = fmul float %k, %c


 <State 54>: 4.35ns
ST_54: tmp_1_i [2/9] 4.35ns
:48  %tmp_1_i = fsub float %tmp_i, %tmp_i_41

ST_54: tmp_5_i [2/9] 4.35ns
:52  %tmp_5_i = fsub float %tmp_3_i, %tmp_4_i

ST_54: tmp_8_i [2/5] 4.35ns
:55  %tmp_8_i = fmul float %d, %h

ST_54: tmp_9_i [2/5] 4.35ns
:56  %tmp_9_i = fmul float %e, %g

ST_54: tmp_14_i [2/9] 4.35ns
:63  %tmp_14_i = fsub float %tmp_12_i, %tmp_13_i

ST_54: tmp_18_i [2/9] 4.35ns
:67  %tmp_18_i = fsub float %tmp_16_i, %tmp_17_i

ST_54: tmp_21_i [2/5] 4.35ns
:70  %tmp_21_i = fmul float %b, %l

ST_54: tmp_22_i [2/5] 4.35ns
:71  %tmp_22_i = fmul float %k, %c


 <State 55>: 4.35ns
ST_55: tmp_1_i [1/9] 4.35ns
:48  %tmp_1_i = fsub float %tmp_i, %tmp_i_41

ST_55: tmp_5_i [1/9] 4.35ns
:52  %tmp_5_i = fsub float %tmp_3_i, %tmp_4_i

ST_55: tmp_8_i [1/5] 4.35ns
:55  %tmp_8_i = fmul float %d, %h

ST_55: tmp_9_i [1/5] 4.35ns
:56  %tmp_9_i = fmul float %e, %g

ST_55: tmp_14_i [1/9] 4.35ns
:63  %tmp_14_i = fsub float %tmp_12_i, %tmp_13_i

ST_55: tmp_18_i [1/9] 4.35ns
:67  %tmp_18_i = fsub float %tmp_16_i, %tmp_17_i

ST_55: tmp_21_i [1/5] 4.35ns
:70  %tmp_21_i = fmul float %b, %l

ST_55: tmp_22_i [1/5] 4.35ns
:71  %tmp_22_i = fmul float %k, %c


 <State 56>: 4.35ns
ST_56: tmp_2_i [5/5] 4.35ns
:49  %tmp_2_i = fmul float %a, %tmp_1_i

ST_56: tmp_6_i [5/5] 4.35ns
:53  %tmp_6_i = fmul float %b, %tmp_5_i

ST_56: tmp_10_i [9/9] 4.35ns
:57  %tmp_10_i = fsub float %tmp_8_i, %tmp_9_i

ST_56: tmp_15_i [5/5] 4.35ns
:64  %tmp_15_i = fmul float %f, %tmp_14_i

ST_56: tmp_19_i [5/5] 4.35ns
:68  %tmp_19_i = fmul float %e, %tmp_18_i

ST_56: tmp_23_i [9/9] 4.35ns
:72  %tmp_23_i = fsub float %tmp_21_i, %tmp_22_i

ST_56: tmp_27_i [5/5] 4.35ns
:79  %tmp_27_i = fmul float %tmp_14_i, %i_1

ST_56: tmp_28_i [5/5] 4.35ns
:80  %tmp_28_i = fmul float %tmp_18_i, %h

ST_56: tmp_32_i [5/5] 4.35ns
:85  %tmp_32_i = fmul float %j, %tmp_1_i

ST_56: tmp_33_i [5/5] 4.35ns
:86  %tmp_33_i = fmul float %k, %tmp_5_i


 <State 57>: 4.35ns
ST_57: tmp_2_i [4/5] 4.35ns
:49  %tmp_2_i = fmul float %a, %tmp_1_i

ST_57: tmp_6_i [4/5] 4.35ns
:53  %tmp_6_i = fmul float %b, %tmp_5_i

ST_57: tmp_10_i [8/9] 4.35ns
:57  %tmp_10_i = fsub float %tmp_8_i, %tmp_9_i

ST_57: tmp_15_i [4/5] 4.35ns
:64  %tmp_15_i = fmul float %f, %tmp_14_i

ST_57: tmp_19_i [4/5] 4.35ns
:68  %tmp_19_i = fmul float %e, %tmp_18_i

ST_57: tmp_23_i [8/9] 4.35ns
:72  %tmp_23_i = fsub float %tmp_21_i, %tmp_22_i

ST_57: tmp_27_i [4/5] 4.35ns
:79  %tmp_27_i = fmul float %tmp_14_i, %i_1

ST_57: tmp_28_i [4/5] 4.35ns
:80  %tmp_28_i = fmul float %tmp_18_i, %h

ST_57: tmp_32_i [4/5] 4.35ns
:85  %tmp_32_i = fmul float %j, %tmp_1_i

ST_57: tmp_33_i [4/5] 4.35ns
:86  %tmp_33_i = fmul float %k, %tmp_5_i


 <State 58>: 4.35ns
ST_58: tmp_2_i [3/5] 4.35ns
:49  %tmp_2_i = fmul float %a, %tmp_1_i

ST_58: tmp_6_i [3/5] 4.35ns
:53  %tmp_6_i = fmul float %b, %tmp_5_i

ST_58: tmp_10_i [7/9] 4.35ns
:57  %tmp_10_i = fsub float %tmp_8_i, %tmp_9_i

ST_58: tmp_15_i [3/5] 4.35ns
:64  %tmp_15_i = fmul float %f, %tmp_14_i

ST_58: tmp_19_i [3/5] 4.35ns
:68  %tmp_19_i = fmul float %e, %tmp_18_i

ST_58: tmp_23_i [7/9] 4.35ns
:72  %tmp_23_i = fsub float %tmp_21_i, %tmp_22_i

ST_58: tmp_27_i [3/5] 4.35ns
:79  %tmp_27_i = fmul float %tmp_14_i, %i_1

ST_58: tmp_28_i [3/5] 4.35ns
:80  %tmp_28_i = fmul float %tmp_18_i, %h

ST_58: tmp_32_i [3/5] 4.35ns
:85  %tmp_32_i = fmul float %j, %tmp_1_i

ST_58: tmp_33_i [3/5] 4.35ns
:86  %tmp_33_i = fmul float %k, %tmp_5_i


 <State 59>: 4.35ns
ST_59: tmp_2_i [2/5] 4.35ns
:49  %tmp_2_i = fmul float %a, %tmp_1_i

ST_59: tmp_6_i [2/5] 4.35ns
:53  %tmp_6_i = fmul float %b, %tmp_5_i

ST_59: tmp_10_i [6/9] 4.35ns
:57  %tmp_10_i = fsub float %tmp_8_i, %tmp_9_i

ST_59: tmp_15_i [2/5] 4.35ns
:64  %tmp_15_i = fmul float %f, %tmp_14_i

ST_59: tmp_19_i [2/5] 4.35ns
:68  %tmp_19_i = fmul float %e, %tmp_18_i

ST_59: tmp_23_i [6/9] 4.35ns
:72  %tmp_23_i = fsub float %tmp_21_i, %tmp_22_i

ST_59: tmp_27_i [2/5] 4.35ns
:79  %tmp_27_i = fmul float %tmp_14_i, %i_1

ST_59: tmp_28_i [2/5] 4.35ns
:80  %tmp_28_i = fmul float %tmp_18_i, %h

ST_59: tmp_32_i [2/5] 4.35ns
:85  %tmp_32_i = fmul float %j, %tmp_1_i

ST_59: tmp_33_i [2/5] 4.35ns
:86  %tmp_33_i = fmul float %k, %tmp_5_i


 <State 60>: 4.35ns
ST_60: tmp_2_i [1/5] 4.35ns
:49  %tmp_2_i = fmul float %a, %tmp_1_i

ST_60: tmp_6_i [1/5] 4.35ns
:53  %tmp_6_i = fmul float %b, %tmp_5_i

ST_60: tmp_10_i [5/9] 4.35ns
:57  %tmp_10_i = fsub float %tmp_8_i, %tmp_9_i

ST_60: tmp_15_i [1/5] 4.35ns
:64  %tmp_15_i = fmul float %f, %tmp_14_i

ST_60: tmp_19_i [1/5] 4.35ns
:68  %tmp_19_i = fmul float %e, %tmp_18_i

ST_60: tmp_23_i [5/9] 4.35ns
:72  %tmp_23_i = fsub float %tmp_21_i, %tmp_22_i

ST_60: tmp_27_i [1/5] 4.35ns
:79  %tmp_27_i = fmul float %tmp_14_i, %i_1

ST_60: tmp_28_i [1/5] 4.35ns
:80  %tmp_28_i = fmul float %tmp_18_i, %h

ST_60: tmp_32_i [1/5] 4.35ns
:85  %tmp_32_i = fmul float %j, %tmp_1_i

ST_60: tmp_33_i [1/5] 4.35ns
:86  %tmp_33_i = fmul float %k, %tmp_5_i


 <State 61>: 4.35ns
ST_61: tmp_7_i [9/9] 4.35ns
:54  %tmp_7_i = fadd float %tmp_2_i, %tmp_6_i

ST_61: tmp_10_i [4/9] 4.35ns
:57  %tmp_10_i = fsub float %tmp_8_i, %tmp_9_i

ST_61: tmp_20_i [9/9] 4.35ns
:69  %tmp_20_i = fadd float %tmp_15_i, %tmp_19_i

ST_61: tmp_23_i [4/9] 4.35ns
:72  %tmp_23_i = fsub float %tmp_21_i, %tmp_22_i

ST_61: tmp_29_i [9/9] 4.35ns
:81  %tmp_29_i = fadd float %tmp_27_i, %tmp_28_i

ST_61: tmp_34_i [9/9] 4.35ns
:87  %tmp_34_i = fadd float %tmp_32_i, %tmp_33_i


 <State 62>: 4.35ns
ST_62: tmp_7_i [8/9] 4.35ns
:54  %tmp_7_i = fadd float %tmp_2_i, %tmp_6_i

ST_62: tmp_10_i [3/9] 4.35ns
:57  %tmp_10_i = fsub float %tmp_8_i, %tmp_9_i

ST_62: tmp_20_i [8/9] 4.35ns
:69  %tmp_20_i = fadd float %tmp_15_i, %tmp_19_i

ST_62: tmp_23_i [3/9] 4.35ns
:72  %tmp_23_i = fsub float %tmp_21_i, %tmp_22_i

ST_62: tmp_29_i [8/9] 4.35ns
:81  %tmp_29_i = fadd float %tmp_27_i, %tmp_28_i

ST_62: tmp_34_i [8/9] 4.35ns
:87  %tmp_34_i = fadd float %tmp_32_i, %tmp_33_i


 <State 63>: 4.35ns
ST_63: tmp_7_i [7/9] 4.35ns
:54  %tmp_7_i = fadd float %tmp_2_i, %tmp_6_i

ST_63: tmp_10_i [2/9] 4.35ns
:57  %tmp_10_i = fsub float %tmp_8_i, %tmp_9_i

ST_63: tmp_20_i [7/9] 4.35ns
:69  %tmp_20_i = fadd float %tmp_15_i, %tmp_19_i

ST_63: tmp_23_i [2/9] 4.35ns
:72  %tmp_23_i = fsub float %tmp_21_i, %tmp_22_i

ST_63: tmp_29_i [7/9] 4.35ns
:81  %tmp_29_i = fadd float %tmp_27_i, %tmp_28_i

ST_63: tmp_34_i [7/9] 4.35ns
:87  %tmp_34_i = fadd float %tmp_32_i, %tmp_33_i


 <State 64>: 4.35ns
ST_64: tmp_7_i [6/9] 4.35ns
:54  %tmp_7_i = fadd float %tmp_2_i, %tmp_6_i

ST_64: tmp_10_i [1/9] 4.35ns
:57  %tmp_10_i = fsub float %tmp_8_i, %tmp_9_i

ST_64: tmp_20_i [6/9] 4.35ns
:69  %tmp_20_i = fadd float %tmp_15_i, %tmp_19_i

ST_64: tmp_23_i [1/9] 4.35ns
:72  %tmp_23_i = fsub float %tmp_21_i, %tmp_22_i

ST_64: tmp_29_i [6/9] 4.35ns
:81  %tmp_29_i = fadd float %tmp_27_i, %tmp_28_i

ST_64: tmp_34_i [6/9] 4.35ns
:87  %tmp_34_i = fadd float %tmp_32_i, %tmp_33_i


 <State 65>: 4.35ns
ST_65: tmp_7_i [5/9] 4.35ns
:54  %tmp_7_i = fadd float %tmp_2_i, %tmp_6_i

ST_65: tmp_11_i [5/5] 4.35ns
:58  %tmp_11_i = fmul float %c, %tmp_10_i

ST_65: tmp_20_i [5/9] 4.35ns
:69  %tmp_20_i = fadd float %tmp_15_i, %tmp_19_i

ST_65: tmp_24_i [5/5] 4.35ns
:73  %tmp_24_i = fmul float %d, %tmp_23_i

ST_65: tmp_29_i [5/9] 4.35ns
:81  %tmp_29_i = fadd float %tmp_27_i, %tmp_28_i

ST_65: tmp_30_i [5/5] 4.35ns
:82  %tmp_30_i = fmul float %tmp_23_i, %g

ST_65: tmp_34_i [5/9] 4.35ns
:87  %tmp_34_i = fadd float %tmp_32_i, %tmp_33_i

ST_65: tmp_35_i [5/5] 4.35ns
:88  %tmp_35_i = fmul float %l, %tmp_10_i


 <State 66>: 4.35ns
ST_66: tmp_7_i [4/9] 4.35ns
:54  %tmp_7_i = fadd float %tmp_2_i, %tmp_6_i

ST_66: tmp_11_i [4/5] 4.35ns
:58  %tmp_11_i = fmul float %c, %tmp_10_i

ST_66: tmp_20_i [4/9] 4.35ns
:69  %tmp_20_i = fadd float %tmp_15_i, %tmp_19_i

ST_66: tmp_24_i [4/5] 4.35ns
:73  %tmp_24_i = fmul float %d, %tmp_23_i

ST_66: tmp_29_i [4/9] 4.35ns
:81  %tmp_29_i = fadd float %tmp_27_i, %tmp_28_i

ST_66: tmp_30_i [4/5] 4.35ns
:82  %tmp_30_i = fmul float %tmp_23_i, %g

ST_66: tmp_34_i [4/9] 4.35ns
:87  %tmp_34_i = fadd float %tmp_32_i, %tmp_33_i

ST_66: tmp_35_i [4/5] 4.35ns
:88  %tmp_35_i = fmul float %l, %tmp_10_i


 <State 67>: 4.35ns
ST_67: tmp_7_i [3/9] 4.35ns
:54  %tmp_7_i = fadd float %tmp_2_i, %tmp_6_i

ST_67: tmp_11_i [3/5] 4.35ns
:58  %tmp_11_i = fmul float %c, %tmp_10_i

ST_67: tmp_20_i [3/9] 4.35ns
:69  %tmp_20_i = fadd float %tmp_15_i, %tmp_19_i

ST_67: tmp_24_i [3/5] 4.35ns
:73  %tmp_24_i = fmul float %d, %tmp_23_i

ST_67: tmp_29_i [3/9] 4.35ns
:81  %tmp_29_i = fadd float %tmp_27_i, %tmp_28_i

ST_67: tmp_30_i [3/5] 4.35ns
:82  %tmp_30_i = fmul float %tmp_23_i, %g

ST_67: tmp_34_i [3/9] 4.35ns
:87  %tmp_34_i = fadd float %tmp_32_i, %tmp_33_i

ST_67: tmp_35_i [3/5] 4.35ns
:88  %tmp_35_i = fmul float %l, %tmp_10_i


 <State 68>: 4.35ns
ST_68: tmp_7_i [2/9] 4.35ns
:54  %tmp_7_i = fadd float %tmp_2_i, %tmp_6_i

ST_68: tmp_11_i [2/5] 4.35ns
:58  %tmp_11_i = fmul float %c, %tmp_10_i

ST_68: tmp_20_i [2/9] 4.35ns
:69  %tmp_20_i = fadd float %tmp_15_i, %tmp_19_i

ST_68: tmp_24_i [2/5] 4.35ns
:73  %tmp_24_i = fmul float %d, %tmp_23_i

ST_68: tmp_29_i [2/9] 4.35ns
:81  %tmp_29_i = fadd float %tmp_27_i, %tmp_28_i

ST_68: tmp_30_i [2/5] 4.35ns
:82  %tmp_30_i = fmul float %tmp_23_i, %g

ST_68: tmp_34_i [2/9] 4.35ns
:87  %tmp_34_i = fadd float %tmp_32_i, %tmp_33_i

ST_68: tmp_35_i [2/5] 4.35ns
:88  %tmp_35_i = fmul float %l, %tmp_10_i


 <State 69>: 4.35ns
ST_69: tmp_7_i [1/9] 4.35ns
:54  %tmp_7_i = fadd float %tmp_2_i, %tmp_6_i

ST_69: tmp_11_i [1/5] 4.35ns
:58  %tmp_11_i = fmul float %c, %tmp_10_i

ST_69: tmp_20_i [1/9] 4.35ns
:69  %tmp_20_i = fadd float %tmp_15_i, %tmp_19_i

ST_69: tmp_24_i [1/5] 4.35ns
:73  %tmp_24_i = fmul float %d, %tmp_23_i

ST_69: tmp_29_i [1/9] 4.35ns
:81  %tmp_29_i = fadd float %tmp_27_i, %tmp_28_i

ST_69: tmp_30_i [1/5] 4.35ns
:82  %tmp_30_i = fmul float %tmp_23_i, %g

ST_69: tmp_34_i [1/9] 4.35ns
:87  %tmp_34_i = fadd float %tmp_32_i, %tmp_33_i

ST_69: tmp_35_i [1/5] 4.35ns
:88  %tmp_35_i = fmul float %l, %tmp_10_i


 <State 70>: 4.35ns
ST_70: m [9/9] 4.35ns
:59  %m = fadd float %tmp_7_i, %tmp_11_i

ST_70: tmp_25_i [9/9] 4.35ns
:74  %tmp_25_i = fadd float %tmp_20_i, %tmp_24_i

ST_70: tmp_31_i [9/9] 4.35ns
:83  %tmp_31_i = fadd float %tmp_29_i, %tmp_30_i

ST_70: tmp_36_i [9/9] 4.35ns
:89  %tmp_36_i = fadd float %tmp_34_i, %tmp_35_i


 <State 71>: 4.35ns
ST_71: m [8/9] 4.35ns
:59  %m = fadd float %tmp_7_i, %tmp_11_i

ST_71: tmp_25_i [8/9] 4.35ns
:74  %tmp_25_i = fadd float %tmp_20_i, %tmp_24_i

ST_71: tmp_31_i [8/9] 4.35ns
:83  %tmp_31_i = fadd float %tmp_29_i, %tmp_30_i

ST_71: tmp_36_i [8/9] 4.35ns
:89  %tmp_36_i = fadd float %tmp_34_i, %tmp_35_i


 <State 72>: 4.35ns
ST_72: m [7/9] 4.35ns
:59  %m = fadd float %tmp_7_i, %tmp_11_i

ST_72: tmp_25_i [7/9] 4.35ns
:74  %tmp_25_i = fadd float %tmp_20_i, %tmp_24_i

ST_72: tmp_31_i [7/9] 4.35ns
:83  %tmp_31_i = fadd float %tmp_29_i, %tmp_30_i

ST_72: tmp_36_i [7/9] 4.35ns
:89  %tmp_36_i = fadd float %tmp_34_i, %tmp_35_i


 <State 73>: 4.35ns
ST_73: m [6/9] 4.35ns
:59  %m = fadd float %tmp_7_i, %tmp_11_i

ST_73: tmp_25_i [6/9] 4.35ns
:74  %tmp_25_i = fadd float %tmp_20_i, %tmp_24_i

ST_73: tmp_31_i [6/9] 4.35ns
:83  %tmp_31_i = fadd float %tmp_29_i, %tmp_30_i

ST_73: tmp_36_i [6/9] 4.35ns
:89  %tmp_36_i = fadd float %tmp_34_i, %tmp_35_i


 <State 74>: 4.35ns
ST_74: m [5/9] 4.35ns
:59  %m = fadd float %tmp_7_i, %tmp_11_i

ST_74: tmp_25_i [5/9] 4.35ns
:74  %tmp_25_i = fadd float %tmp_20_i, %tmp_24_i

ST_74: tmp_31_i [5/9] 4.35ns
:83  %tmp_31_i = fadd float %tmp_29_i, %tmp_30_i

ST_74: tmp_36_i [5/9] 4.35ns
:89  %tmp_36_i = fadd float %tmp_34_i, %tmp_35_i


 <State 75>: 4.35ns
ST_75: m [4/9] 4.35ns
:59  %m = fadd float %tmp_7_i, %tmp_11_i

ST_75: tmp_25_i [4/9] 4.35ns
:74  %tmp_25_i = fadd float %tmp_20_i, %tmp_24_i

ST_75: tmp_31_i [4/9] 4.35ns
:83  %tmp_31_i = fadd float %tmp_29_i, %tmp_30_i

ST_75: tmp_36_i [4/9] 4.35ns
:89  %tmp_36_i = fadd float %tmp_34_i, %tmp_35_i


 <State 76>: 4.35ns
ST_76: m [3/9] 4.35ns
:59  %m = fadd float %tmp_7_i, %tmp_11_i

ST_76: tmp_25_i [3/9] 4.35ns
:74  %tmp_25_i = fadd float %tmp_20_i, %tmp_24_i

ST_76: tmp_31_i [3/9] 4.35ns
:83  %tmp_31_i = fadd float %tmp_29_i, %tmp_30_i

ST_76: tmp_36_i [3/9] 4.35ns
:89  %tmp_36_i = fadd float %tmp_34_i, %tmp_35_i


 <State 77>: 4.35ns
ST_77: m [2/9] 4.35ns
:59  %m = fadd float %tmp_7_i, %tmp_11_i

ST_77: tmp_25_i [2/9] 4.35ns
:74  %tmp_25_i = fadd float %tmp_20_i, %tmp_24_i

ST_77: tmp_31_i [2/9] 4.35ns
:83  %tmp_31_i = fadd float %tmp_29_i, %tmp_30_i

ST_77: tmp_36_i [2/9] 4.35ns
:89  %tmp_36_i = fadd float %tmp_34_i, %tmp_35_i


 <State 78>: 4.35ns
ST_78: m [1/9] 4.35ns
:59  %m = fadd float %tmp_7_i, %tmp_11_i

ST_78: tmp_25_i [1/9] 4.35ns
:74  %tmp_25_i = fadd float %tmp_20_i, %tmp_24_i

ST_78: tmp_31_i [1/9] 4.35ns
:83  %tmp_31_i = fadd float %tmp_29_i, %tmp_30_i

ST_78: tmp_36_i [1/9] 4.35ns
:89  %tmp_36_i = fadd float %tmp_34_i, %tmp_35_i


 <State 79>: 3.38ns
ST_79: im [30/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 80>: 3.38ns
ST_80: im [29/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 81>: 3.38ns
ST_81: im [28/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 82>: 3.38ns
ST_82: im [27/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 83>: 3.38ns
ST_83: im [26/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 84>: 3.38ns
ST_84: im [25/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 85>: 3.38ns
ST_85: im [24/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 86>: 3.38ns
ST_86: im [23/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 87>: 3.38ns
ST_87: im [22/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 88>: 3.38ns
ST_88: im [21/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 89>: 3.38ns
ST_89: im [20/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 90>: 3.38ns
ST_90: im [19/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 91>: 3.38ns
ST_91: im [18/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 92>: 3.38ns
ST_92: im [17/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 93>: 3.38ns
ST_93: im [16/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 94>: 3.38ns
ST_94: im [15/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 95>: 3.38ns
ST_95: im [14/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 96>: 3.38ns
ST_96: im [13/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 97>: 3.38ns
ST_97: im [12/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 98>: 3.38ns
ST_98: im [11/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 99>: 3.38ns
ST_99: im [10/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 100>: 3.38ns
ST_100: im [9/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 101>: 3.38ns
ST_101: im [8/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 102>: 3.38ns
ST_102: im [7/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 103>: 3.38ns
ST_103: im [6/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 104>: 3.38ns
ST_104: im [5/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 105>: 3.38ns
ST_105: im [4/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 106>: 3.38ns
ST_106: im [3/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 107>: 3.38ns
ST_107: im [2/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m


 <State 108>: 3.38ns
ST_108: im [1/30] 3.38ns
:60  %im = fdiv float 1.000000e+00, %m

ST_108: tmp_61_to_int_i [1/1] 0.00ns
:75  %tmp_61_to_int_i = bitcast float %tmp_25_i to i32

ST_108: tmp_61_neg_i [1/1] 1.37ns
:76  %tmp_61_neg_i = xor i32 %tmp_61_to_int_i, -2147483648


 <State 109>: 4.35ns
ST_109: tmp_26_i [1/1] 0.00ns
:77  %tmp_26_i = bitcast i32 %tmp_61_neg_i to float

ST_109: t_write_assign [5/5] 4.35ns
:78  %t_write_assign = fmul float %tmp_26_i, %im

ST_109: gamma_write_assign [5/5] 4.35ns
:84  %gamma_write_assign = fmul float %tmp_31_i, %im

ST_109: beta_write_assign [5/5] 4.35ns
:90  %beta_write_assign = fmul float %tmp_36_i, %im


 <State 110>: 4.35ns
ST_110: t_write_assign [4/5] 4.35ns
:78  %t_write_assign = fmul float %tmp_26_i, %im

ST_110: gamma_write_assign [4/5] 4.35ns
:84  %gamma_write_assign = fmul float %tmp_31_i, %im

ST_110: beta_write_assign [4/5] 4.35ns
:90  %beta_write_assign = fmul float %tmp_36_i, %im


 <State 111>: 4.35ns
ST_111: t_write_assign [3/5] 4.35ns
:78  %t_write_assign = fmul float %tmp_26_i, %im

ST_111: gamma_write_assign [3/5] 4.35ns
:84  %gamma_write_assign = fmul float %tmp_31_i, %im

ST_111: beta_write_assign [3/5] 4.35ns
:90  %beta_write_assign = fmul float %tmp_36_i, %im


 <State 112>: 4.35ns
ST_112: t_write_assign [2/5] 4.35ns
:78  %t_write_assign = fmul float %tmp_26_i, %im

ST_112: gamma_write_assign [2/5] 4.35ns
:84  %gamma_write_assign = fmul float %tmp_31_i, %im

ST_112: beta_write_assign [2/5] 4.35ns
:90  %beta_write_assign = fmul float %tmp_36_i, %im


 <State 113>: 4.35ns
ST_113: t_write_assign [1/5] 4.35ns
:78  %t_write_assign = fmul float %tmp_26_i, %im

ST_113: gamma_write_assign [1/5] 4.35ns
:84  %gamma_write_assign = fmul float %tmp_31_i, %im

ST_113: beta_write_assign [1/5] 4.35ns
:90  %beta_write_assign = fmul float %tmp_36_i, %im

ST_113: t_write_assign_toint [1/1] 0.00ns
:91  %t_write_assign_toint = bitcast float %t_write_assign to i32

ST_113: gamma_write_assign_toint [1/1] 0.00ns
:92  %gamma_write_assign_toint = bitcast float %gamma_write_assign to i32

ST_113: beta_write_assign_toint [1/1] 0.00ns
:93  %beta_write_assign_toint = bitcast float %beta_write_assign to i32

ST_113: tmp_2 [1/1] 0.00ns
:94  %tmp_2 = call i96 @_ssdm_op_BitConcatenate.i96.i32.i32.i32(i32 %beta_write_assign_toint, i32 %gamma_write_assign_toint, i32 %t_write_assign_toint)

ST_113: beta_addr_1174175_part_set [1/1] 0.00ns
:95  %beta_addr_1174175_part_set = call i576 @_ssdm_op_PartSet.i576.i576.i96.i32.i32(i576 %data_array_load_2, i96 %tmp_2, i32 480, i32 575)


 <State 114>: 2.71ns
ST_114: empty_40 [1/1] 0.00ns
:0  %empty_40 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)

ST_114: stg_665 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopName([5 x i8]* @p_str6) nounwind

ST_114: tmp_4 [1/1] 0.00ns
:2  %tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([5 x i8]* @p_str6)

ST_114: stg_667 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_114: stg_668 [1/1] 2.71ns
:96  store i576 %beta_addr_1174175_part_set, i576* %data_array_addr_2, align 8

ST_114: empty_42 [1/1] 0.00ns
:97  %empty_42 = call i32 (...)* @_ssdm_op_SpecRegionEnd([5 x i8]* @p_str6, i32 %tmp_4)

ST_114: stg_670 [1/1] 0.00ns
:98  br label %.preheader59


 <State 115>: 2.71ns
ST_115: data_array_load [2/2] 2.71ns
.preheader.preheader:0  %data_array_load = load i576* %data_array_addr, align 8


 <State 116>: 2.71ns
ST_116: data_array_load [1/2] 2.71ns
.preheader.preheader:0  %data_array_load = load i576* %data_array_addr, align 8

ST_116: t_load_new [1/1] 0.00ns
.preheader.preheader:1  %t_load_new = call i32 @_ssdm_op_PartSelect.i32.i576.i32.i32(i576 %data_array_load, i32 480, i32 511)

ST_116: t_load [1/1] 0.00ns
.preheader.preheader:2  %t_load = bitcast i32 %t_load_new to float

ST_116: stg_675 [1/1] 0.00ns
.preheader.preheader:3  call void @_ssdm_op_Write.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %outs_data, i4* %outs_keep_V, i4* %outs_strb_V, i1* %outs_user_V, i1* %outs_last_V, i1* %outs_id_V, i1* %outs_dest_V, float %t_load, i4 %ins_keep_V_val, i4 %ins_strb_V_val, i1 %ins_user_V_val, i1 false, i1 %ins_id_V_val, i1 %ins_dest_V_val)

ST_116: gamma_load_new [1/1] 0.00ns
.preheader.preheader:4  %gamma_load_new = call i32 @_ssdm_op_PartSelect.i32.i576.i32.i32(i576 %data_array_load, i32 512, i32 543)

ST_116: beta_load_new [1/1] 0.00ns
.preheader.preheader:7  %beta_load_new = call i32 @_ssdm_op_PartSelect.i32.i576.i32.i32(i576 %data_array_load, i32 544, i32 575)


 <State 117>: 0.00ns
ST_117: gamma_load [1/1] 0.00ns
.preheader.preheader:5  %gamma_load = bitcast i32 %gamma_load_new to float

ST_117: stg_679 [1/1] 0.00ns
.preheader.preheader:6  call void @_ssdm_op_Write.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %outs_data, i4* %outs_keep_V, i4* %outs_strb_V, i1* %outs_user_V, i1* %outs_last_V, i1* %outs_id_V, i1* %outs_dest_V, float %gamma_load, i4 %ins_keep_V_val, i4 %ins_strb_V_val, i1 %ins_user_V_val, i1 false, i1 %ins_id_V_val, i1 %ins_dest_V_val)


 <State 118>: 2.71ns
ST_118: beta_load [1/1] 0.00ns
.preheader.preheader:8  %beta_load = bitcast i32 %beta_load_new to float

ST_118: stg_681 [1/1] 0.00ns
.preheader.preheader:9  call void @_ssdm_op_Write.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %outs_data, i4* %outs_keep_V, i4* %outs_strb_V, i1* %outs_user_V, i1* %outs_last_V, i1* %outs_id_V, i1* %outs_dest_V, float %beta_load, i4 %ins_keep_V_val, i4 %ins_strb_V_val, i1 %ins_user_V_val, i1 false, i1 %ins_id_V_val, i1 %ins_dest_V_val)

ST_118: data_array_load_1 [2/2] 2.71ns
.preheader.preheader:10  %data_array_load_1 = load i576* %data_array_addr_1, align 8


 <State 119>: 2.71ns
ST_119: data_array_load_1 [1/2] 2.71ns
.preheader.preheader:10  %data_array_load_1 = load i576* %data_array_addr_1, align 8

ST_119: t_load_1_new [1/1] 0.00ns
.preheader.preheader:11  %t_load_1_new = call i32 @_ssdm_op_PartSelect.i32.i576.i32.i32(i576 %data_array_load_1, i32 480, i32 511)

ST_119: t_load_s [1/1] 0.00ns
.preheader.preheader:12  %t_load_s = bitcast i32 %t_load_1_new to float

ST_119: stg_686 [1/1] 0.00ns
.preheader.preheader:13  call void @_ssdm_op_Write.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %outs_data, i4* %outs_keep_V, i4* %outs_strb_V, i1* %outs_user_V, i1* %outs_last_V, i1* %outs_id_V, i1* %outs_dest_V, float %t_load_s, i4 %ins_keep_V_val, i4 %ins_strb_V_val, i1 %ins_user_V_val, i1 false, i1 %ins_id_V_val, i1 %ins_dest_V_val)

ST_119: gamma_load_1_new [1/1] 0.00ns
.preheader.preheader:14  %gamma_load_1_new = call i32 @_ssdm_op_PartSelect.i32.i576.i32.i32(i576 %data_array_load_1, i32 512, i32 543)

ST_119: beta_load_1_new [1/1] 0.00ns
.preheader.preheader:17  %beta_load_1_new = call i32 @_ssdm_op_PartSelect.i32.i576.i32.i32(i576 %data_array_load_1, i32 544, i32 575)


 <State 120>: 0.00ns
ST_120: gamma_load_s [1/1] 0.00ns
.preheader.preheader:15  %gamma_load_s = bitcast i32 %gamma_load_1_new to float

ST_120: stg_690 [1/1] 0.00ns
.preheader.preheader:16  call void @_ssdm_op_Write.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %outs_data, i4* %outs_keep_V, i4* %outs_strb_V, i1* %outs_user_V, i1* %outs_last_V, i1* %outs_id_V, i1* %outs_dest_V, float %gamma_load_s, i4 %ins_keep_V_val, i4 %ins_strb_V_val, i1 %ins_user_V_val, i1 false, i1 %ins_id_V_val, i1 %ins_dest_V_val)


 <State 121>: 0.00ns
ST_121: beta_load_s [1/1] 0.00ns
.preheader.preheader:18  %beta_load_s = bitcast i32 %beta_load_1_new to float

ST_121: stg_692 [1/1] 0.00ns
.preheader.preheader:19  call void @_ssdm_op_Write.axis.volatile.floatP.i4P.i4P.i1P.i1P.i1P.i1P(float* %outs_data, i4* %outs_keep_V, i4* %outs_strb_V, i1* %outs_user_V, i1* %outs_last_V, i1* %outs_id_V, i1* %outs_dest_V, float %beta_load_s, i4 %ins_keep_V_val, i4 %ins_strb_V_val, i1 %ins_user_V_val, i1 %ins_last_V_val, i1 %ins_id_V_val, i1 %ins_dest_V_val)

ST_121: stg_693 [1/1] 0.00ns
.preheader.preheader:20  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
