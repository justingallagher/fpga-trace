// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _tri_intersect_HH_
#define _tri_intersect_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct tri_intersect : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > ins_TDATA;
    sc_in< sc_logic > ins_TVALID;
    sc_out< sc_logic > ins_TREADY;
    sc_in< sc_lv<4> > ins_TKEEP;
    sc_in< sc_lv<4> > ins_TSTRB;
    sc_in< sc_lv<2> > ins_TUSER;
    sc_in< sc_lv<1> > ins_TLAST;
    sc_in< sc_lv<5> > ins_TID;
    sc_in< sc_lv<6> > ins_TDEST;
    sc_out< sc_lv<32> > outs_TDATA;
    sc_out< sc_logic > outs_TVALID;
    sc_in< sc_logic > outs_TREADY;
    sc_out< sc_lv<4> > outs_TKEEP;
    sc_out< sc_lv<4> > outs_TSTRB;
    sc_out< sc_lv<2> > outs_TUSER;
    sc_out< sc_lv<1> > outs_TLAST;
    sc_out< sc_lv<5> > outs_TID;
    sc_out< sc_lv<6> > outs_TDEST;


    // Module declarations
    tri_intersect(sc_module_name name);
    SC_HAS_PROCESS(tri_intersect);

    ~tri_intersect();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<32> > ins_data_V_val_reg_132;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_37;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_56;
    sc_signal< sc_logic > ap_sig_ioackin_outs_TREADY;
    sc_signal< sc_logic > ap_reg_ioackin_outs_TREADY;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_st1_fsm_0;
    static const sc_lv<2> ap_ST_st2_fsm_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_bdd_37();
    void thread_ap_sig_bdd_56();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_ioackin_outs_TREADY();
    void thread_ins_TREADY();
    void thread_outs_TDATA();
    void thread_outs_TDEST();
    void thread_outs_TID();
    void thread_outs_TKEEP();
    void thread_outs_TLAST();
    void thread_outs_TSTRB();
    void thread_outs_TUSER();
    void thread_outs_TVALID();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
